function now(): timestamp {
	val blocks = block @* {} ( @sort_desc @omit .rowid, $ ) limit 2;
	return if (blocks.size() == 2) blocks[1].timestamp else blocks[0].timestamp;
}

function millis_from_now(millis: integer) {
	return now() + millis;
}

function seconds_from_now(seconds: integer) {
	return now() + (seconds * 1000);
}

function minutes_from_now(minutes: integer) {
	return now() + (minutes * 60 * 1000);
}

function hours_from_now(hours: integer) {
	return now() + (hours * 60 * 60 * 1000);
}

function hours_ago(hours: integer) {
  return now() - (hours * 60 * 60 * 1000);
}

function days_from_now(days: integer) {
	return now() + (days * 24 * 60 * 60 * 1000);
}

function days_ago(days: integer) {
  return now() - (days * 24 * 60 * 60 * 1000);
}